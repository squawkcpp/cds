<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dc/d45/__lua_8h" kind="file" language="C++">
    <compoundname>_lua.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="d4/d77/scanner_8cpp" local="yes">src/scanner.cpp</includedby>
    <incdepgraph>
      <node id="40">
        <label>string</label>
      </node>
      <node id="39">
        <label>src/_lua.h</label>
        <link refid="_lua.h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="41">
        <label>src/_lua.h</label>
        <link refid="_lua.h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>src/scanner.cpp</label>
        <link refid="d4/d77/scanner_8cpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dc/d45/__lua_8h_1a97e01ed4a4dc5dd5fac4dfe9c4602694" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string LUA_FLUSH</definition>
        <argsstring></argsstring>
        <name>LUA_FLUSH</name>
        <initializer>= &quot;local keys = redis.call(&apos;keys&apos;, ARGV[1]) \n for i=1,#keys,5000 do \n redis.call(&apos;del&apos;, unpack(keys, i, math.min(i+4999, #keys))) \n end \n return keys&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/_lua.h" line="6" column="1" bodyfile="src/_lua.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d45/__lua_8h_1abd6dd9a93bb0f32b4bce62c1bb435ccb" prot="public" static="yes" mutable="no">
        <type>const std::string</type>
        <definition>const std::string LUA_INDEX</definition>
        <argsstring></argsstring>
        <name>LUA_INDEX</name>
        <initializer>= &quot;local matches = redis.call(&apos;KEYS&apos;, &apos;fs:*:list&apos;)\n&quot; 
&quot;local results = {};\n&quot; 
&quot;for _,key in ipairs(matches) do\n&quot; 
&quot;\n&quot; 
&quot;    redis.call(&apos;SORT&apos;, key, &apos;BY&apos;, &apos;fs:*:node-&gt;clean_string&apos;, &apos;ALPHA&apos;, &apos;ASC&apos;, &apos;STORE&apos;, key .. &apos;:sort:alpha:asc&apos;)\n&quot; 
&quot;    redis.call(&apos;SORT&apos;, key, &apos;BY&apos;, &apos;fs:*:node-&gt;clean_string&apos;, &apos;ALPHA&apos;, &apos;DESC&apos;, &apos;STORE&apos;, key .. &apos;:sort:alpha:desc&apos;)\n&quot; 
&quot;    redis.call(&apos;SORT&apos;, key, &apos;BY&apos;, &apos;fs:*:node-&gt;timestamp&apos;, &apos;ALPHA&apos;, &apos;ASC&apos;, &apos;STORE&apos;, key .. &apos;:sort:timestamp:asc&apos;)\n&quot; 
&quot;    redis.call(&apos;SORT&apos;, key, &apos;BY&apos;, &apos;fs:*:node-&gt;timestamp&apos;, &apos;ALPHA&apos;, &apos;DESC&apos;, &apos;STORE&apos;, key .. &apos;:sort:timestamp:desc&apos;)\n&quot; 
&quot;    redis.call(&apos;SADD&apos;, key .. &apos;:sort:list&apos;, &apos;default&apos;, &apos;timestamp&apos;, &apos;alpha&apos; )\n&quot; 
&quot;\n&quot; 
&quot;    local _parent_key = string.sub(key, 0, string.find( key, &apos;:list&apos;)-1)\n&quot; 
&quot;    local _parent_cls = redis.call(&apos;HGET&apos;, _parent_key, &apos;cls&apos; )\n&quot; 
&quot;    if _parent_key == &apos;fs:album&apos; or _parent_key == &apos;fs:movie&apos; then\n&quot; 
&quot;        redis.call(&apos;SORT&apos;, key, &apos;BY&apos;, &apos;fs:*:node-&gt;year&apos;, &apos;ALPHA&apos;, &apos;ASC&apos;, &apos;STORE&apos;, key .. &apos;:sort:year:asc&apos;)\n&quot; 
&quot;        redis.call(&apos;SORT&apos;, key, &apos;BY&apos;, &apos;fs:*-&gt;year&apos;, &apos;ALPHA&apos;, &apos;DESC&apos;, &apos;STORE&apos;, key .. &apos;:sort:year:desc&apos;)\n&quot; 
&quot;        redis.call(&apos;SADD&apos;, key .. &apos;:sort:list&apos;, &apos;year&apos; )\n&quot; 
&quot;    end\n&quot; 
&quot;    if _parent_cls == &apos;album&apos; then\n&quot; 
&quot;    elseif _parent_cls == &apos;movie&apos; then\n&quot; 
&quot;    end\n&quot; 
&quot;end\n&quot; 
&quot;return 0\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/_lua.h" line="8" column="1" bodyfile="src/_lua.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_LUA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LUA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>LUA_FLUSH<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;local<sp/>keys<sp/>=<sp/>redis.call(&apos;keys&apos;,<sp/>ARGV[1])<sp/>\n<sp/>for<sp/>i=1,#keys,5000<sp/>do<sp/>\n<sp/>redis.call(&apos;del&apos;,<sp/>unpack(keys,<sp/>i,<sp/>math.min(i+4999,<sp/>#keys)))<sp/>\n<sp/>end<sp/>\n<sp/>return<sp/>keys&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>LUA_INDEX<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;local<sp/>matches<sp/>=<sp/>redis.call(&apos;KEYS&apos;,<sp/>&apos;fs:*:list&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;local<sp/>results<sp/>=<sp/>{};\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;for<sp/>_,key<sp/>in<sp/>ipairs(matches)<sp/>do\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>redis.call(&apos;SORT&apos;,<sp/>key,<sp/>&apos;BY&apos;,<sp/>&apos;fs:*:node-&gt;clean_string&apos;,<sp/>&apos;ALPHA&apos;,<sp/>&apos;ASC&apos;,<sp/>&apos;STORE&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:alpha:asc&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>redis.call(&apos;SORT&apos;,<sp/>key,<sp/>&apos;BY&apos;,<sp/>&apos;fs:*:node-&gt;clean_string&apos;,<sp/>&apos;ALPHA&apos;,<sp/>&apos;DESC&apos;,<sp/>&apos;STORE&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:alpha:desc&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>redis.call(&apos;SORT&apos;,<sp/>key,<sp/>&apos;BY&apos;,<sp/>&apos;fs:*:node-&gt;timestamp&apos;,<sp/>&apos;ALPHA&apos;,<sp/>&apos;ASC&apos;,<sp/>&apos;STORE&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:timestamp:asc&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>redis.call(&apos;SORT&apos;,<sp/>key,<sp/>&apos;BY&apos;,<sp/>&apos;fs:*:node-&gt;timestamp&apos;,<sp/>&apos;ALPHA&apos;,<sp/>&apos;DESC&apos;,<sp/>&apos;STORE&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:timestamp:desc&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>redis.call(&apos;SADD&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:list&apos;,<sp/>&apos;default&apos;,<sp/>&apos;timestamp&apos;,<sp/>&apos;alpha&apos;<sp/>)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>local<sp/>_parent_key<sp/>=<sp/>string.sub(key,<sp/>0,<sp/>string.find(<sp/>key,<sp/>&apos;:list&apos;)-1)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>local<sp/>_parent_cls<sp/>=<sp/>redis.call(&apos;HGET&apos;,<sp/>_parent_key,<sp/>&apos;cls&apos;<sp/>)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>if<sp/>_parent_key<sp/>==<sp/>&apos;fs:album&apos;<sp/>or<sp/>_parent_key<sp/>==<sp/>&apos;fs:movie&apos;<sp/>then\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redis.call(&apos;SORT&apos;,<sp/>key,<sp/>&apos;BY&apos;,<sp/>&apos;fs:*:node-&gt;year&apos;,<sp/>&apos;ALPHA&apos;,<sp/>&apos;ASC&apos;,<sp/>&apos;STORE&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:year:asc&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redis.call(&apos;SORT&apos;,<sp/>key,<sp/>&apos;BY&apos;,<sp/>&apos;fs:*-&gt;year&apos;,<sp/>&apos;ALPHA&apos;,<sp/>&apos;DESC&apos;,<sp/>&apos;STORE&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:year:desc&apos;)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redis.call(&apos;SADD&apos;,<sp/>key<sp/>..<sp/>&apos;:sort:list&apos;,<sp/>&apos;year&apos;<sp/>)\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>end\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>if<sp/>_parent_cls<sp/>==<sp/>&apos;album&apos;<sp/>then\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>elseif<sp/>_parent_cls<sp/>==<sp/>&apos;movie&apos;<sp/>then\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>end\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;end\n&quot;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;return<sp/>0\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_LUA_H</highlight></codeline>
    </programlisting>
    <location file="src/_lua.h"/>
  </compounddef>
</doxygen>
