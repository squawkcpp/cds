<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="db/d16/config_8h" kind="file" language="C++">
    <compoundname>config.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">system_error</includes>
    <includes local="no">vector</includes>
    <includedby refid="df/d0a/main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="d8/dc3/server_8h" local="yes">src/server.h</includedby>
    <includedby refid="df/d59/config_8cpp" local="yes">src/config.cpp</includedby>
    <includedby refid="d8/da5/mod__albums_8h" local="yes">src/modules/mod_albums.h</includedby>
    <includedby refid="d7/d3c/mod__ebooks_8h" local="yes">src/modules/mod_ebooks.h</includedby>
    <includedby refid="db/de2/mod__images_8h" local="yes">src/modules/mod_images.h</includedby>
    <includedby refid="df/d7b/mod__movies_8h" local="yes">src/modules/mod_movies.h</includedby>
    <includedby refid="df/d15/mod__series_8h" local="yes">src/modules/mod_series.h</includedby>
    <includedby refid="db/d62/scanner_8h" local="yes">src/scanner.h</includedby>
    <includedby refid="df/dd7/server_8cpp" local="yes">src/server.cpp</includedby>
    <incdepgraph>
      <node id="96">
        <label>system_error</label>
      </node>
      <node id="95">
        <label>string</label>
      </node>
      <node id="93">
        <label>src/config.h</label>
        <link refid="config.h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>vector</label>
      </node>
      <node id="94">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="103">
        <label>src/modules/mod_albums.h</label>
        <link refid="d8/da5/mod__albums_8h_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>src/modules/mod_albums.cpp</label>
        <link refid="d5/d7b/mod__albums_8cpp_source"/>
      </node>
      <node id="108">
        <label>src/modules/mod_images.h</label>
        <link refid="db/de2/mod__images_8h_source"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>src/server.cpp</label>
        <link refid="df/dd7/server_8cpp_source"/>
      </node>
      <node id="106">
        <label>src/modules/mod_ebooks.h</label>
        <link refid="d7/d3c/mod__ebooks_8h_source"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>src/scanner.h</label>
        <link refid="db/d62/scanner_8h_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>src/modules/mod_ebooks.cpp</label>
        <link refid="d1/d93/mod__ebooks_8cpp_source"/>
      </node>
      <node id="109">
        <label>src/modules/mod_images.cpp</label>
        <link refid="dc/d37/mod__images_8cpp_source"/>
      </node>
      <node id="98">
        <label>src/config.h</label>
        <link refid="config.h"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>src/scanner.cpp</label>
        <link refid="d4/d77/scanner_8cpp_source"/>
      </node>
      <node id="110">
        <label>src/modules/mod_movies.h</label>
        <link refid="df/d7b/mod__movies_8h_source"/>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>main.cpp</label>
        <link refid="df/d0a/main_8cpp_source"/>
      </node>
      <node id="113">
        <label>src/modules/mod_series.cpp</label>
        <link refid="de/d91/mod__series_8cpp_source"/>
      </node>
      <node id="111">
        <label>src/modules/mod_movies.cpp</label>
        <link refid="d5/d0f/mod__movies_8cpp_source"/>
      </node>
      <node id="100">
        <label>src/server.h</label>
        <link refid="d8/dc3/server_8h_source"/>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>src/modules/mod_series.h</label>
        <link refid="df/d15/mod__series_8h_source"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>src/config.cpp</label>
        <link refid="df/d59/config_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d4/d74/structcds_1_1Config" prot="public">cds::Config</innerclass>
    <innernamespace refid="d9/d60/namespacecds">cds</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25" prot="public" static="no">
        <name>ERROR_CODES</name>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a6ce26a62afab55d7606ad4e92428b30c" prot="public">
          <name>UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a4b39d2ea5dfdca164568a9a9014925e8" prot="public">
          <name>LISTEN_ADDRESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a9679398211931847fcdd651349f60ba7" prot="public">
          <name>HTTP_PORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a2f5b8e9ba436145feafe6bf6707e4117" prot="public">
          <name>TMP_DIRECTORY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a913a469c51f5516dc97f747caeaa108a" prot="public">
          <name>TMDB_KEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25ac51e5c80f54eadabadc5902a210ca569" prot="public">
          <name>AMAZON_ACCESS_KEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a3aff5f11e5e08bb9e89505fa131c58eb" prot="public">
          <name>AMAZON_KEY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="db/d16/config_8h_1a938a8c46255e5666f6a434ca0eb87f25a3eb0b3c78d811b28fdb69a414c0881b8" prot="public">
          <name>MEDIA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The cds ERROR_CODES enum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/config.h" line="24" column="1" bodyfile="src/config.h" bodystart="24" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;system_error&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ERROR_CODES<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>UNKNOWN,<sp/>LISTEN_ADDRESS,<sp/>HTTP_PORT,<sp/>TMP_DIRECTORY,<sp/>TMDB_KEY,<sp/>AMAZON_ACCESS_KEY,<sp/>AMAZON_KEY,<sp/>MEDIA</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">is_error_condition_enum&lt;ERROR_CODES&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>true_type<sp/>{};</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">config_category_t<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::error_category<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>std::error_condition<sp/>default_error_condition<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ev<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equivalent<sp/>(<sp/>const<sp/>std::error_code&amp;<sp/>code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition<sp/>)<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>virtual<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>message<sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ev<sp/>)<sp/>const;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/>static<sp/>config_category;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">inline<sp/>std::error_condition<sp/>make_error_condition<sp/>(<sp/>ERROR_CODES<sp/>e<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::error_condition<sp/>(<sp/>static_cast&lt;int&gt;<sp/>(<sp/>e<sp/>),<sp/>config_category<sp/>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/d60/namespacecds" kindref="compound">cds</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="d4/d74/structcds_1_1Config" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d4/d74/structcds_1_1Config" kindref="compound">Config</ref><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listen_address,<sp/>http_port,<sp/>tmp_directory,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmdb_key,<sp/>amazon_access_key,<sp/>amazon_key;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::string<sp/>&gt;<sp/>media;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="d9/d60/namespacecds_1a75d8ab4b7cb64db9480621f17c400183" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::error_code<sp/><ref refid="d9/d60/namespacecds_1a75d8ab4b7cb64db9480621f17c400183" kindref="member">make_error_code</ref><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNKNOWN:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LISTEN_ADDRESS:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HTTP_PORT:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TMP_DIRECTORY:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>TMDB_KEY:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AMAZON_ACCESS_KEY:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>AMAZON_KEY:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>MEDIA:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::error_code<sp/>(<sp/>error,<sp/>config_category<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::error_code<sp/>(<sp/>error,<sp/>std::generic_category()<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">std::string<sp/>_get_ip();</highlight></codeline>
<codeline lineno="75"></codeline>
<codeline lineno="77"><highlight class="normal">std::vector&lt;<sp/>std::error_code<sp/>&gt;<sp/><ref refid="d9/d60/namespacecds_1ad64f032e28ec0cc0b09c73a48b13eeab" kindref="member">validate</ref><sp/>(<sp/>std::shared_ptr&lt;<sp/>Config<sp/>&gt;<sp/>config<sp/><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">std::string<sp/><ref refid="d9/d60/namespacecds_1a033625ff6b0a15415bbab3db4c3e1309" kindref="member">json</ref><sp/>(<sp/>std::shared_ptr&lt;<sp/>Config<sp/>&gt;<sp/>config<sp/><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">std::shared_ptr&lt;<sp/>Config<sp/>&gt;<sp/>json<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>config<sp/><sp/>);</highlight></codeline>
<codeline lineno="83" refid="d9/d60/namespacecds_1a06113560522abea20f7bdceb55de2bbc" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;<sp/>Config<sp/>&gt;<sp/><ref refid="d9/d60/namespacecds_1a06113560522abea20f7bdceb55de2bbc" kindref="member">config_ptr</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>cds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CONFIG_H</highlight></codeline>
    </programlisting>
    <location file="src/config.h"/>
  </compounddef>
</doxygen>
