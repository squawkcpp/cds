<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="d6/d84/namespaceutils" kind="namespace" language="C++">
    <compoundname>utils</compoundname>
    <innerclass refid="db/d6e/classutils_1_1Amazon" prot="public">utils::Amazon</innerclass>
    <innerclass refid="db/d2f/structutils_1_1AmazonResult" prot="public">utils::AmazonResult</innerclass>
    <innerclass refid="d8/d79/classutils_1_1Image" prot="public">utils::Image</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="db/d11/image_8cpp_1a2ce3cb6d0187f1b97b2cb7e92dbc9aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double utils::image_scale</definition>
        <argsstring>(cds::ECoverSizes::Enum type, double width, double height)</argsstring>
        <name>image_scale</name>
        <param>
          <type>cds::ECoverSizes::Enum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>double</type>
          <declname>width</declname>
        </param>
        <param>
          <type>double</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/image.cpp" line="19" column="1" bodyfile="src/utils/image.cpp" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="db/d11/image_8cpp_1ad87247a8c4af1f511497a7a900172215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string utils::make_cover_uri</definition>
        <argsstring>(const cds::ECoverSizes::Enum &amp;type, const std::string &amp;key)</argsstring>
        <name>make_cover_uri</name>
        <param>
          <type>const cds::ECoverSizes::Enum &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/image.cpp" line="25" column="1" bodyfile="src/utils/image.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="db/d11/image_8cpp_1aa96a322a4fcba1152bb92ef7542373b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string utils::make_cover_path</definition>
        <argsstring>(const std::string &amp;path, const cds::ECoverSizes::Enum &amp;type, const std::string &amp;key)</argsstring>
        <name>make_cover_path</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const cds::ECoverSizes::Enum &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/image.cpp" line="29" column="1" bodyfile="src/utils/image.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d0/d64/imageexif_8cpp_1a9cf462b687436b4509c45b9db899319d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void utils::exif</definition>
        <argsstring>(data::node_t &amp;node)</argsstring>
        <name>exif</name>
        <param>
          <type>data::node_t &amp;</type>
          <declname>node</declname>
          <briefdescription><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>node to process. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></briefdescription>
        </param>
        <briefdescription>
<para>load exif information from image and store in node_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/utils/imageexif.cpp" line="30" column="1" bodyfile="src/utils/imageexif.cpp" bodystart="30" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/utils/amazon.cpp" line="33" column="1"/>
  </compounddef>
</doxygen>
