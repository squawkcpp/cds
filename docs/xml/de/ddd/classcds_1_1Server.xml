<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="de/ddd/classcds_1_1Server" kind="class" language="C++" prot="public">
    <compoundname>cds::Server</compoundname>
    <includes refid="d8/dc3/server_8h" local="no">server.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/ddd/classcds_1_1Server_1a4b79ecb91d8898f27f87a7a33e342294" prot="private" static="no" mutable="no">
        <type>data::redis_ptr</type>
        <definition>data::redis_ptr cds::Server::redis_</definition>
        <argsstring></argsstring>
        <name>redis_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="73" column="1" bodyfile="src/server.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/ddd/classcds_1_1Server_1a3463b4c06c20eeca27185b3c51448976" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d60/namespacecds_1a06113560522abea20f7bdceb55de2bbc" kindref="member">config_ptr</ref></type>
        <definition>config_ptr cds::Server::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="74" column="1" bodyfile="src/server.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/ddd/classcds_1_1Server_1a992eb9b125b18552edefb50bafff8d85" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; cds::Server::rescanning_</definition>
        <argsstring></argsstring>
        <name>rescanning_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="75" column="1" bodyfile="src/server.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/ddd/classcds_1_1Server_1aa2a99937662a01cbe7fc1f0d68e56708" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; std::thread &gt;</type>
        <definition>std::unique_ptr&lt; std::thread &gt; cds::Server::scanner_thread_</definition>
        <argsstring></argsstring>
        <name>scanner_thread_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="76" column="1" bodyfile="src/server.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/ddd/classcds_1_1Server_1a41511870b19f8462fe988ac034dcc4c8" prot="private" static="no" mutable="no">
        <type>redox::Subscriber</type>
        <definition>redox::Subscriber cds::Server::sub_</definition>
        <argsstring></argsstring>
        <name>sub_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="77" column="1" bodyfile="src/server.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1afbf86e0452ab45fe2f75df1f2adfad4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cds::Server::Server</definition>
        <argsstring>(const std::string &amp;redis, const short port)</argsstring>
        <name>Server</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>redis</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>port</declname>
          <briefdescription><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>redis</parametername>
</parameternamelist>
<parameterdescription>
<para>redis host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>the redis port. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></briefdescription>
        </param>
        <briefdescription>
<para>The CDS <ref refid="de/ddd/classcds_1_1Server" kindref="compound">Server</ref> CTOR. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="39" column="1" bodyfile="src/server.cpp" bodystart="48" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1aa86c23ba2b8426c67da83d1d69306569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::config</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>config</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="43" column="1" bodyfile="src/server.cpp" bodystart="73" bodyend="78"/>
        <references refid="df/dea/structdata_1a2e667bbfd4a9d1abeff95eadfd91a9c8" compoundref="d9/db6/datastore_8h" startline="441" endline="443">data::config</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1af2e65c60a5f16e41ebcbc6669be5ffe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::rescan</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>rescan</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>rescan media directories. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="45" column="1" bodyfile="src/server.cpp" bodystart="80" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a88df24b5970ad18d427315a870e4e944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::status</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>status</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get content directory status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="47" column="1" bodyfile="src/server.cpp" bodystart="92" bodyend="131"/>
        <references refid="df/dea/structdata_1a15bde8b9a65b4e748f4880b6ed75eea2" compoundref="d9/db6/datastore_8h" startline="361" endline="366">data::children_count</references>
        <references refid="df/dea/structdata_1a64d1a0d542b5966540c6297d994c06e5" compoundref="d9/db6/datastore_8h" startline="235" endline="242">data::make_key</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a226022a43b29123d6fcb845ab5c4713d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::node</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>node</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get node item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="50" column="1" bodyfile="src/server.cpp" bodystart="133" bodyend="156"/>
        <references refid="df/dea/structdata_1adae832d78a0adf2a0b4abca522757126" compoundref="d9/db6/datastore_8h" startline="245" endline="247">data::make_key_node</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a2ee5708b9f35871a311feb06fa43a0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::nodes</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>nodes</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get node list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="52" column="1" bodyfile="src/server.cpp" bodystart="213" bodyend="266"/>
        <references refid="df/dea/structdata_1aeafb3837ce1e2fbfea65c76431ef4fb8" compoundref="d9/db6/datastore_8h" startline="314" endline="340">data::children</references>
        <references refid="df/dea/structdata_1a2767cb86aa09c29a549ab449809ec812" compoundref="d9/db6/datastore_8h" startline="305" endline="311">data::node</references>
        <references refid="df/dea/structdata_1a15bde8b9a65b4e748f4880b6ed75eea2" compoundref="d9/db6/datastore_8h" startline="361" endline="366">data::children_count</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a8d0f5fcc6bb289bd3d2a1a2df2298e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::files</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>files</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get file list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="54" column="1" bodyfile="src/server.cpp" bodystart="268" bodyend="317"/>
        <references refid="df/de0/classdata_1_1NodeType_1ac6fb806749e55ecbd940d721f355a97b" compoundref="d9/db6/datastore_8h" startline="179" endline="211">data::NodeType::parse</references>
        <references refid="df/de0/classdata_1_1NodeType_1ad33d2fbcfb0f4b4736449adc92da8650" compoundref="d9/db6/datastore_8h" startline="174" endline="176">data::NodeType::str</references>
        <references refid="df/dea/structdata_1a0290561be5ee3d258ea2c200d28409e9" compoundref="d9/db6/datastore_8h" startline="343" endline="358">data::files</references>
        <references refid="df/dea/structdata_1a2767cb86aa09c29a549ab449809ec812" compoundref="d9/db6/datastore_8h" startline="305" endline="311">data::node</references>
        <references refid="df/dea/structdata_1a5630966d8b25205277ba680e158956b5" compoundref="d9/db6/datastore_8h" startline="369" endline="374">data::files_count</references>
        <references refid="df/dea/structdata_1aeafb3837ce1e2fbfea65c76431ef4fb8" compoundref="d9/db6/datastore_8h" startline="314" endline="340">data::children</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a7a2398284fc075e5325d9ae140afcdb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::sort</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>sort</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get sort criterias for the given node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="58" column="1" bodyfile="src/server.cpp" bodystart="191" bodyend="211"/>
        <references refid="df/dea/structdata_1a64d1a0d542b5966540c6297d994c06e5" compoundref="d9/db6/datastore_8h" startline="235" endline="242">data::make_key</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1ad5fb8a933d0110b1983df7e97c82a63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::path</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>path</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get the complete path for the given node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="60" column="1" bodyfile="src/server.cpp" bodystart="158" bodyend="189"/>
        <references refid="df/dea/structdata_1a547f7721fc58fce2b5c27e4c4c226fca" compoundref="d9/db6/datastore_8h" startline="274" endline="281">data::get</references>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1abd16cb6935350e7e0824315f4211ae21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::sug</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>sug</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get the autocomplete items for the given string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="62" column="1" bodyfile="src/server.cpp" bodystart="372" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a8df811f421058612d41d3538f8775750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::opds</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>opds</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="64" column="1" bodyfile="src/server.cpp" bodystart="319" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1aaa29a062d4cac4928dd68a39901af02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>http::http_status</type>
        <definition>http::http_status cds::Server::keywords</definition>
        <argsstring>(http::Request &amp;request, http::Response &amp;response)</argsstring>
        <name>keywords</name>
        <param>
          <type>http::Request &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type>http::Response &amp;</type>
          <declname>response</declname>
        </param>
        <briefdescription>
<para>get module node list </para>        </briefdescription>
        <detaileddescription>
<para>get keywords list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="70" column="1" bodyfile="src/server.cpp" bodystart="394" bodyend="415"/>
        <references refid="df/dea/structdata_1a64d1a0d542b5966540c6297d994c06e5" compoundref="d9/db6/datastore_8h" startline="235" endline="242">data::make_key</references>
        <references refid="df/d63/classcds_1_1Scanner_1ad2edfe5f9d7d538ed0eb52033e335793" compoundref="d4/d77/scanner_8cpp" startline="180" endline="188">cds::Scanner::flush</references>
        <references refid="df/d63/classcds_1_1Scanner_1ad65da450bbf06bb2ad93c2293c092a1f" compoundref="d4/d77/scanner_8cpp" startline="40" endline="67">cds::Scanner::import_files</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="de/ddd/classcds_1_1Server_1a39a9aa36076f8270b100f9519aea9fdf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cds::Server::rescan_</definition>
        <argsstring>(bool flush, std::function&lt; void(std::error_code &amp;)&gt; fn)</argsstring>
        <name>rescan_</name>
        <param>
          <type>bool</type>
          <declname>flush</declname>
        </param>
        <param>
          <type>std::function&lt; void(std::error_code &amp;)&gt;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Rescan the content directory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.h" line="80" column="1" bodyfile="src/server.cpp" bodystart="417" bodyend="431"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Content directory server. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/server.h" line="36" column="1" bodyfile="src/server.h" bodystart="36" bodyend="81"/>
    <listofallmembers>
      <member refid="de/ddd/classcds_1_1Server_1aa86c23ba2b8426c67da83d1d69306569" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>config</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a3463b4c06c20eeca27185b3c51448976" prot="private" virt="non-virtual"><scope>cds::Server</scope><name>config_</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a8d0f5fcc6bb289bd3d2a1a2df2298e9b" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>files</name></member>
      <member refid="de/ddd/classcds_1_1Server_1aaa29a062d4cac4928dd68a39901af02b" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>keywords</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a226022a43b29123d6fcb845ab5c4713d" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>node</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a2ee5708b9f35871a311feb06fa43a0e1" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>nodes</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a8df811f421058612d41d3538f8775750" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>opds</name></member>
      <member refid="de/ddd/classcds_1_1Server_1ad5fb8a933d0110b1983df7e97c82a63d" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>path</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a4b79ecb91d8898f27f87a7a33e342294" prot="private" virt="non-virtual"><scope>cds::Server</scope><name>redis_</name></member>
      <member refid="de/ddd/classcds_1_1Server_1af2e65c60a5f16e41ebcbc6669be5ffe1" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>rescan</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a39a9aa36076f8270b100f9519aea9fdf" prot="private" virt="non-virtual"><scope>cds::Server</scope><name>rescan_</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a992eb9b125b18552edefb50bafff8d85" prot="private" virt="non-virtual"><scope>cds::Server</scope><name>rescanning_</name></member>
      <member refid="de/ddd/classcds_1_1Server_1aa2a99937662a01cbe7fc1f0d68e56708" prot="private" virt="non-virtual"><scope>cds::Server</scope><name>scanner_thread_</name></member>
      <member refid="de/ddd/classcds_1_1Server_1afbf86e0452ab45fe2f75df1f2adfad4b" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>Server</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a7a2398284fc075e5325d9ae140afcdb8" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>sort</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a88df24b5970ad18d427315a870e4e944" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>status</name></member>
      <member refid="de/ddd/classcds_1_1Server_1a41511870b19f8462fe988ac034dcc4c8" prot="private" virt="non-virtual"><scope>cds::Server</scope><name>sub_</name></member>
      <member refid="de/ddd/classcds_1_1Server_1abd16cb6935350e7e0824315f4211ae21" prot="public" virt="non-virtual"><scope>cds::Server</scope><name>sug</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
